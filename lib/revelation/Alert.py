#!/usr/bin/python3

"""

APP: Inquisition
DESC: Alert.py - a class representing an alert and its metadata
CREATION_DATE: 2017-10-16

"""

# MODULES
# | Native

# | Third-Party

# | Custom

# METADATA
__author__ = 'Joshua Carlson-Purcell'
__license__ = 'MIT'
__version__ = '2019.0.0.1-alpha'
__maintainer__ = 'Joshua Carlson-Purcell'
__email__ = 'jcarlson@carlso.net'
__status__ = 'Development'


class Alert():
    """
    Alert object, usually generated by one of Inquisition's detection engines

    TIMESTAMP: timestamp the alert was created
    ALERT_TYPE: 1 = host anomaly, 2 = traffic node anomaly, 3 = threat
    STATUS: status of the alert:  0 = NEW, 1 = ACKNOWLEDGED, 2 = RESOLVED
    """

    alertID = 0
    timestamp = 0
    alertType = 1
    status = 0
    host = '127.0.0.1'
    srcNode = '0.0.0.0'
    dstNode = '0.0.0.0'
    alertDetails = ''
    logData = {}

    def __init__(self, alertID=0, timestamp=0, alertType=1, status=0, host='127.0.0.1', srcNode='0.0.0.0',
                 dstNode='0.0.0.0', alertDetails='', logData=None):
        # set metadata
        self.alertID = alertID
        self.timestamp = timestamp
        self.alertType = alertType
        self.status = status
        self.host = host
        self.srcNode = srcNode
        self.dstNode = dstNode
        self.alertDetails = alertDetails
        self.logData = logData

    def __str__(self):
        """
        toString function for printing alert info

        :return: str
        """

        return '[ ID: ' + str(self.alertID) + ' // TIMESTAMP: ' + str(self.timestamp) \
               + ' // TYPE: ' + str(self.alertType) + ' // STATUS: ' + str(self.status) \
               + ' // HOST: ' + str(self.host) + ' // SRC: ' + str(self.srcNode) + ' // DST: ' + str(self.dstNode) \
               + ' // ALERT DETAILS: { ' + str(self.alertDetails) + ' } // LOG DATA: (( ' + str(self.logData) + ' )) ]'

